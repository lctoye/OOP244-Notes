/* Problem 23 */
	    #include <iostream>
	    using namespace std;
	    #include <string.h>

	    class stats {
		int *pwdcnts;
		int cntcnt;
	      public:
		stats() {
		    cout << "new default stats\n"; 
		    cntcnt = 0; 
		    pwdcnts = NULL; 
		}
		stats(const char s[]) {
		    cout << "new stats for " << s << '\n';
		    cntcnt = 0; pwdcnts = NULL;
		    int i, newwd = 1;
		    for (i = 0; s[i] != '\0'; i++) {
			if (s[i] != ' ' && newwd == 1) {
			    cntcnt++;
			    newwd = 0;
			}
			else if (s[i] == ' ' && newwd == 0)
			    newwd = 1;
		    }
		    if (cntcnt > 0) {
			// assume this allocation will succeed:
			pwdcnts = new int[cntcnt];
			int wd = 0;
			for (i = 0; s[i] != '\0'; i++) {
			    pwdcnts[wd] = 0;
			    while (s[i] == ' ')
				i++;
			    while (s[i] != '\0' && s[i] != ' ') {
				pwdcnts[wd]++;
				i++;
			    }
			    wd++;
			}
		    }
		}
		~stats() 
		{  
		    cout << cntcnt << " stats gone\n";
		    if (pwdcnts != NULL) 
			delete [] pwdcnts; 
		}
		friend ostream &operator<<(ostream &, const stats &);
	    };

	    ostream &operator<<(ostream &os, const stats &x) 
	    {
		int t = 0;
		os << x.cntcnt << " words\n";
		for (int i = 0; i < x.cntcnt; i++) {
		    os << ' ' << i + 1 << ". " << x.pwdcnts[i] << '\n';
		    t += x.pwdcnts[i];
		}
		return os << t << " characters\n";
	    }

	    int main() 
	    {
		char string[41] = "this is a test";
		string[15] = '\0'; // extra null (kludge!)
		stats strstats(string);
		cout << string << ":\n" << strstats << '\n';
		cout << stats(" Another   test ") << '\n';
		return 0; 
	    }
